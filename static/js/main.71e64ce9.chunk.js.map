{"version":3,"sources":["components/common/Preloader/Preloader.module.scss","components/common/Button/Button.module.scss","components/common/MessageInform/MessageInform.module.scss","components/Login/Login.module.scss","api/api.ts","components/Dialogs/Dialogs.module.scss","components/Users/Users.module.scss","components/Navbar/Navbar.module.scss","components/Navbar/Navbar.tsx","components/Dialogs/Dialog/Dialog.tsx","components/Dialogs/Messages/MessageItem/MessageItemMy.tsx","components/Dialogs/Messages/Messages.tsx","components/Dialogs/Dialogs.tsx","hoc/withAuthRedirect.tsx","components/Dialogs/DialogsContainer.tsx","redux/actionsCreator/dialogsAC.ts","assets/Spinner-1s-200px.gif","components/common/Preloader/Preloader.tsx","components/Profile/ProfileContainer.tsx","components/common/Button/Button.tsx","components/common/MessageInform/MessageInform.tsx","components/Users/Users.tsx","redux/actionsCreator/usersAC.ts","redux/reducers/users-selector.ts","components/Users/UsersContainer.tsx","components/Header/Header.tsx","redux/actionsCreator/authAC.ts","components/Header/HeaderContainer.tsx","components/Login/Login.tsx","App.tsx","redux/actionsCreator/appAC.ts","reportWebVitals.ts","redux/reducers/profileReducer.ts","redux/reducers/dialogsReducer.ts","redux/reducers/usersReducer.ts","redux/reducers/authReducer.ts","redux/reducers/appReducer.ts","redux/store.ts","index.tsx","components/Dialogs/Dialog/Dialog.module.scss","components/common/FormsControls/FormsControls.module.scss","components/Header/Header.module.scss","utils/validators.ts","components/common/FormsControls/FormsControls.tsx","redux/actionsCreator/profileAC.ts","components/Dialogs/Messages/Messages.module.scss","redux/actions/actions.js"],"names":["module","exports","instance","axios","create","withCredentials","baseURL","headers","usersAPI","getUsers","currentPage","pageSize","get","then","response","data","userFollow","userId","post","userUnfollow","delete","profileAPI","getProfile","getStatus","updateStatus","status","put","authMe","auth","login","formData","logout","Navbar","className","style","nav","nav__list","nav__item","to","Dialog","React","memo","id","path","dialog","avatar__wrapper","src","avatar","alt","isOnline","online","offline","status__block","name","title","MessageItemMy","message","messagesMy","MessageItem","messagesSubscriber","Messages","Dialogs","dialogs","messages","addMessage","dialogsItem","dialog__wrapper","map","d","i","shadow__bottom","shadow__top","message__wrapper","m","AddMessageReduxForm","onSubmit","newMessage","dialogsMessage","AddMessageForm","props","handleSubmit","input_btn__block","Field","component","Input","validate","required","type","icon","reduxForm","form","mapStateToProps","state","isAuth","DialogsContainer","compose","connect","dialogsPage","dispatch","value","ADD_MESSAGE","Component","restProps","Preloader","s","loading","preloader","Profile","lazy","ProfileContainer","this","match","params","getUserProfile","getUserStatus","prevProps","prevState","snapshot","fallback","profile","updateStatusProfile","withRouterHOC","withRouter","posts","profilePage","addPost","Button","red","finalClassName","default","MessageInform","box__message","defaultAvatar","Users","timeoutId","useState","setValue","pagesCount","Math","ceil","totalUsersCount","pages","push","pagination","search__wrapper","placeholder","search__item","onChange","e","currentValue","currentTarget","clearTimeout","setTimeout","setFilter","users","length","pagination_wrap__btn","p","onClick","onPageChanged","selected","wrapper","u","card__item","photos","small","view__profile","followed","disabled","followingInProgress","some","unfollow","follow","setCurrentPage","SET_CURRENT_PAGE","setTotalUsersCount","totalCount","SET_TOTAL_USERS","toggleIsFetching","isFetching","TOGGLE_IS_FETCHING","toggleFollowingInProgress","TOGGLE_IS_FOLLOWING_PROGRESS","getFilteredUsers","usersPage","filter","toLowerCase","indexOf","getPageSize","getTotalUsersCount","getCurrentPage","getIsFetching","getFollowingInProgress","UsersContainer","pageNumber","usersRequest","onSearchChange","setState","temp","console","log","page","items","SET_USERS","uId","resultCode","FOLLOW","UNFOLLOW","Header","header","logo","loginContainer","avatar_container","header__avatar","setAuthUserDataAC","email","SET_USER_DATA","payload","HeaderContainer","LoginReduxForm","error","action","stopSubmit","_error","App","initializeApp","initialized","render","exact","app","res","Promise","all","INITIALIZED","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","likesCount","profileReducer","ADD_POST","messageBody","SET_USER_PROFILE","SET_STATUS","dialogsReducer","messageText","usersReducer","authReducer","fake","appReducer","reducers","combineReducers","formReducer","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","createStore","applyMiddleware","thunkMiddleware","__store__","ReactDOM","StrictMode","document","getElementById","input","meta","hasError","touched","formControl","errorMessage","TextArea","setUserProfile","setStatus"],"mappings":"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","file":"static/js/main.71e64ce9.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"loading\":\"Preloader_loading__2PkkU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"default\":\"Button_default__3ajGj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"box__message\":\"MessageInform_box__message__yVfpa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loginContainer\":\"Login_loginContainer__2rMYg\"};","import axios from \"axios\";\r\n\r\n\r\n// создаем instance axios и настраиваем один раз, чтобы не дублировать код при каждом запросе.\r\nconst instance = axios.create({\r\n    // withCredentials - Свойство withCredentials это Boolean который определяет, должны ли\r\n    // создаваться кросс-доменные Access-Control запросы с использованием таких идентификационных данных как cookie\r\n    withCredentials: true,\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n    headers: {\r\n        'API-KEY': 'a409a2ec-60ad-4ff6-9051-8f6025edc2fd',\r\n    }\r\n})\r\n\r\nexport const usersAPI = {\r\n    getUsers(currentPage: number, pageSize: number){\r\n        return instance.get<GetUsersType>(`users?page=${currentPage}&count=${pageSize}`)\r\n            .then(response => response.data) },\r\n    userFollow(userId: number) {\r\n        return instance.post<CommonResponseType<boolean>>(`follow/${userId}`)\r\n            .then(response => response.data) },\r\n    userUnfollow(userId: number) {\r\n        return instance.delete<CommonResponseType<boolean>>(`follow/${userId}`)\r\n            .then(response => response.data) }\r\n}\r\n\r\nexport const profileAPI = {\r\n    getProfile(userId: number) {\r\n        return instance.get<profileUserType>(`profile/${userId}`)\r\n            .then(response => response.data) },\r\n    getStatus(userId: number) {\r\n        return instance.get<any>(`profile/status/${userId}`)\r\n        .then(response => response.data) },\r\n    updateStatus(status: string) {\r\n        return instance.put<any>(`profile/status`, { status: status })\r\n        .then(response => response.data) },\r\n}\r\n\r\nexport const authMe = {\r\n    auth() { return instance.get<CommonResponseType<AuthMeType>>('auth/me')\r\n        .then(response => response.data) },\r\n    login(formData: FormDataType) { return instance.post<CommonResponseType<AuthMeType>>('auth/login', {...formData})\r\n        .then(response => response.data) },\r\n    logout() { return instance.delete<CommonResponseType<{}>>('auth/login')\r\n        .then(response => response.data) }\r\n}\r\n\r\n// types\r\ntype CommonResponseType<T> = {\r\n    resultCode: number\r\n    messages: string[]\r\n    data: T\r\n    fieldsErrors: []\r\n}\r\n\r\ntype GetUsersType = {\r\n    error: string | null\r\n    items: userType[]\r\n    totalCount: number\r\n}\r\n\r\nexport type AuthMeType = {\r\n    id: number\r\n    login: string\r\n    email: string\r\n}\r\n\r\nexport type FormDataType = {\r\n    login: string\r\n    password: string\r\n    rememberMe: boolean\r\n}\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__3jGV2\",\"dialogsItem\":\"Dialogs_dialogsItem__2dRwl\",\"title\":\"Dialogs_title__3jMxE\",\"messages\":\"Dialogs_messages__2ztdh\",\"message__wrapper\":\"Dialogs_message__wrapper__1bjAC\",\"dialog__wrapper\":\"Dialogs_dialog__wrapper__2C_wh\",\"shadow__bottom\":\"Dialogs_shadow__bottom__2RkJz\",\"shadow__top\":\"Dialogs_shadow__top__2-5FM\",\"input_btn__block\":\"Dialogs_input_btn__block__1jth-\",\"icon\":\"Dialogs_icon__2bMe4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pagination\":\"Users_pagination__1md1f\",\"pagination_wrap__btn\":\"Users_pagination_wrap__btn__3eQSK\",\"selected\":\"Users_selected__Kjcvr\",\"search__wrapper\":\"Users_search__wrapper__1W-d4\",\"search__item\":\"Users_search__item__23HnV\",\"view__profile\":\"Users_view__profile__2__7P\",\"wrapper\":\"Users_wrapper__1r298\",\"card__item\":\"Users_card__item__2s5Y3\",\"name\":\"Users_name__1Eiii\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__eIQoS\",\"nav__list\":\"Navbar_nav__list__N0cbb\",\"nav__item\":\"Navbar_nav__item__1vKtK\"};","import React from \"react\";\r\nimport style from './Navbar.module.scss'\r\nimport {Link} from 'react-router-dom'\r\n\r\nexport const Navbar = () => {\r\n    return (\r\n        <nav className={style.nav}>\r\n            <ul className={style.nav__list}>\r\n                {/*<div className={style.link__item}>*/}\r\n                {/*    <img src=\"https://img.icons8.com/ios/30/ffffff/gender-neutral-user.png\" alt='' className={style.icon}/>*/}\r\n\r\n                {/*</div>*/}\r\n                <Link className={style.nav__item} to='/profile'>Profile</Link>\r\n                <Link className={style.nav__item} to='/dialogs'>Dialogs</Link>\r\n                <Link className={style.nav__item} to='/news'> News</Link>\r\n                <Link className={style.nav__item} to='/music'>Music</Link>\r\n                <Link className={style.nav__item} to='/settings'>Settings</Link>\r\n                <Link className={style.nav__item} to='/users'>Users</Link>\r\n            </ul>\r\n        </nav>\r\n    )\r\n}\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport style from './Dialog.module.scss'\r\n\r\ntype objectType = {\r\n    avatar: string,\r\n    name: string,\r\n}\r\n\r\ntype dialogType = {\r\n    data: objectType\r\n    id: number\r\n    status: statusType,\r\n}\r\nexport const Dialog = React.memo(({data, id, status}: dialogType) => {\r\n    let path = `/dialogs/${id}`\r\n    return (\r\n        <Link to={path}>\r\n            <div className={style.dialog}>\r\n                <div className={style.avatar__wrapper}>\r\n                    <img src={data.avatar} alt=\"\"/>\r\n                    <span className={status.isOnline ? style.online : style.offline }></span>\r\n                </div>\r\n                <div className={style.status__block}>\r\n                    <div>{data.name}</div>\r\n                    <span className={style.status}>{status.title}</span>\r\n                </div>\r\n            </div>\r\n        </Link>\r\n\r\n    )\r\n});","import style from \"../Messages.module.scss\";\r\nimport React from \"react\";\r\n\r\n\r\nexport const MessageItemMy = React.memo(({name, message, id}: messagesType) => {\r\n    return (\r\n        <div className={style.messagesMy}>\r\n            <span className={style.message}>\r\n                {message}\r\n            </span>\r\n            <div>\r\n                <img\r\n                    src='https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSV83gjFPxbUtDH5iJuUHJHG45z--_hYg6GUA&usqp=CAU'\r\n                    alt=\"\"/>\r\n                <div>{name}</div>\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n})\r\n\r\nexport const MessageItem = React.memo(({name, message, id}: messagesType) => {\r\n    return (\r\n        <div className={style.messagesSubscriber}>\r\n            <div>\r\n                <img\r\n                    src='https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSV83gjFPxbUtDH5iJuUHJHG45z--_hYg6GUA&usqp=CAU'\r\n                    alt=\"\"/>\r\n                <div>{name}</div>\r\n            </div>\r\n            <span className={style.message}>\r\n                {message}\r\n            </span>\r\n        </div>\r\n\r\n    )\r\n})\r\n\r\n","import React from \"react\";\r\nimport {messagesType} from '../../../redux/state'\r\nimport {MessageItemMy, MessageItem} from \"./MessageItem/MessageItemMy\";\r\n\r\nexport const Messages = React.memo(({message, name, id}: messagesType) => {\r\n    if (name === 'my') {\r\n        return <MessageItemMy name={name} message={message} id={id}/>\r\n    } else {\r\n        return <MessageItem name={name} message={message} id={id}/>\r\n    }\r\n})\r\n","import React from \"react\";\r\nimport style from './Dialogs.module.scss'\r\nimport {Dialog} from \"./Dialog/Dialog\";\r\nimport {Messages} from \"./Messages/Messages\";\r\nimport {Field,InjectedFormProps, reduxForm} from \"redux-form\";\r\nimport { required } from \"../../utils/validators\";\r\nimport {Input} from \"../common/FormsControls/FormsControls\";\r\n\r\ntype PropsType = {\r\n    addMessage: (value: string) => void\r\n}\r\n\r\ntype AddMessageFormData = {\r\n    dialogsMessage: string\r\n}\r\n\r\nexport const Dialogs = React.memo(({dialogs, messages,addMessage}: PropsType & dialogsPageType) => {\r\n\r\n    const onSubmit = (newMessage: AddMessageFormData) => {\r\n        addMessage(newMessage.dialogsMessage)\r\n    }\r\n    return (\r\n        <div className={style.dialogs}>\r\n            <div className={style.dialogsItem}>\r\n                <h4 className={style.title}>Friends messages</h4>\r\n                <div className={style.dialog__wrapper}>\r\n                    {dialogs && dialogs.map((d, i) => <Dialog\r\n                        key={i} id={i} data={dialogs[i]}\r\n                        status={dialogs[i].status}/>)}\r\n                </div>\r\n                <div className={style.shadow__bottom}></div>\r\n            </div>\r\n            <div className={style.messages}>\r\n                <div className={style.shadow__top}></div>\r\n                <div className={style.message__wrapper}>\r\n                    {messages && messages.map(m => <Messages\r\n                        message={m.message} name={m.name} id={m.id} key={m.id}/>)}\r\n                </div>\r\n                <AddMessageReduxForm onSubmit={onSubmit}/>\r\n            </div>\r\n        </div>\r\n    )\r\n});\r\n\r\nconst AddMessageForm: React.FC<InjectedFormProps<AddMessageFormData>>  = React.memo((props ) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit} className={style.input_btn__block}>\r\n            <Field component={Input}\r\n                   name={'dialogsMessage'}\r\n                   validate={[required]}\r\n                   type=\"text\"\r\n                   />\r\n            <div className={style.icon}>\r\n                <button>Send</button>\r\n            </div>\r\n        </form>\r\n    )\r\n})\r\n\r\n//HOC reduxForm - это контейнерная компонента\r\nconst AddMessageReduxForm = reduxForm<AddMessageFormData>({\r\n    // a unique name for the form\r\n    form: 'dialogAddMessageForm'\r\n})(AddMessageForm)\r\n\r\n\r\nexport default Dialogs;\r\n","import React, {ComponentType} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {Redirect} from 'react-router-dom';\r\nimport {AppStateType} from \"../redux/store\";\r\n\r\ntype MapStatePropsType = {\r\n    isAuth: boolean\r\n}\r\n\r\nlet mapStateToProps = (state: AppStateType): MapStatePropsType => ({isAuth: state.auth.isAuth})\r\n\r\n// ComponentType - распознает тип компоненты, которая приходит в параметрах. с помощью дженерика <T> получаем компоненту\r\n// и передаем ее в ComponentType<T>\r\nexport function withAuthRedirect<T>(Component: ComponentType<T>) {\r\n    const RedirectComponent = (props: MapStatePropsType) => {\r\n        // деструктуризируем пропсы\r\n        let {isAuth, ...restProps} = props\r\n        if (!isAuth) return <Redirect to={'/login'}/>\r\n\r\n        //с помощью as T указываем, чтобы пропсы считывал из типизации как T\r\n        return <Component {...restProps as T}/>\r\n    }\r\n    let ConnectedRedirectComponent = connect(mapStateToProps)(RedirectComponent)\r\n    return ConnectedRedirectComponent\r\n}\r\n\r\n","import React from 'react'\r\nimport {connect} from \"react-redux\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {addMessage} from \"../../redux/actionsCreator/dialogsAC\";\r\nimport {compose, Dispatch} from 'redux';\r\nimport { AppStateType } from '../../redux/store';\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\n\r\nconst mapStateToProps = (state: AppStateType):dialogsPageType & {} => ({\r\n        dialogs: state.dialogsPage.dialogs,\r\n        messages: state.dialogsPage.messages\r\n})\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch):DispatchDialogsType => {\r\n    return {\r\n        addMessage: (value: string) => {\r\n            dispatch(addMessage(value))\r\n        },\r\n    }\r\n}\r\n\r\n// при помощи compose()() последовательно вызываем(оборачиваем) компоненту\r\n// compose<React.ComponentType> - указываем, что это компонента\r\n// types connect with help generic <>\r\n// <TStateProps = {}, TDispatchProps = {}, TOwnProps = {}, State = DefaultState>\r\nconst DialogsContainer = compose<React.ComponentType>(\r\n    connect<dialogsPageType,DispatchDialogsType,{}, AppStateType>\r\n    (mapStateToProps, mapDispatchToProps),\r\n    withAuthRedirect,\r\n)(Dialogs)\r\n\r\nexport default DialogsContainer\r\n","import {ADD_MESSAGE} from \"../actions/actions\";\r\n\r\nexport const addMessage = (value: string) => ({type: ADD_MESSAGE, value})\r\n","export default __webpack_public_path__ + \"static/media/Spinner-1s-200px.6f589e28.gif\";","import React from 'react'\r\nimport preloader from \"../../../assets/Spinner-1s-200px.gif\";\r\nimport s from './Preloader.module.scss'\r\n\r\n\r\nconst Preloader = () => {\r\n    return  <div className={s.loading}>\r\n        <img  src={preloader} alt='preloader'/>\r\n    </div>\r\n}\r\n\r\nexport default Preloader","import React, {Suspense} from \"react\";\r\nimport {connect} from \"react-redux\";\r\n// import Test from \"./Test\";\r\nimport {AppStateType} from \"../../redux/store\";\r\nimport {compose} from \"redux\";\r\nimport {\r\n    addPost,\r\n    getUserProfile,\r\n    getUserStatus,\r\n    updateStatusProfile\r\n} from \"../../redux/actionsCreator/profileAC\";\r\nimport {RouteComponentProps, withRouter} from \"react-router-dom\";\r\nimport Preloader from \"../common/Preloader/Preloader\";\r\n\r\nconst Profile = React.lazy(() => import('./Profile')); // Ленивая загрузка\r\n\r\nclass ProfileContainer extends React.Component<PropsType> {\r\n\r\n    componentDidMount() {\r\n        // get match params - userId from browser\r\n        let userId = +this.props.match.params.userId\r\n        if (!userId) {\r\n            if(this.props.userId !== null) userId = this.props.userId\r\n        }\r\n        if (userId) {\r\n            this.props.getUserProfile(userId)\r\n            this.props.getUserStatus(userId)\r\n        }\r\n\r\n    }\r\n\r\n    componentDidUpdate(prevProps: Readonly<PropsType>, prevState: Readonly<{}>, snapshot?: any) {\r\n        if(this.props.match.params.userId !== prevProps.match.params.userId) {\r\n            if(this.props.userId) {\r\n                this.props.getUserProfile(this.props.userId)\r\n                this.props.getUserStatus(this.props.userId)\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            // Suspense - Delay in receiving data. show Preloader at boot time\r\n            <Suspense fallback={<Preloader/>}>\r\n                <Profile profile={this.props.profile}\r\n                         updateStatusProfile={this.props.updateStatusProfile}\r\n                         status={this.props.status}\r\n                />\r\n            </Suspense>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nconst MapStateToProps = (state: AppStateType): MapStateProfileType => ({\r\n    posts: state.profilePage.posts,\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    userId: state.auth.id\r\n})\r\n\r\n\r\n// withRouter - позволяет получить доступ к истории(свойствам) и ближайшему Route соответствию.\r\n// withRouter - будет передавать обновленные match,location,history - свойства, обернутому компоненту при каждом рендере\r\nlet withRouterHOC = withRouter(ProfileContainer)\r\n\r\nexport default compose(\r\n    connect<MapStateProfileType, DispatchProfileType, {}, AppStateType>\r\n    (MapStateToProps, {addPost, getUserProfile, getUserStatus, updateStatusProfile})\r\n)(withRouterHOC)\r\n\r\n// types\r\ntype ParamsType = {\r\n    userId: string\r\n}\r\ntype MapStateProfileType = {\r\n    posts: postsType[]\r\n    profile: profileUserType | null | undefined\r\n    status: string\r\n    userId: number | null\r\n}\r\nexport type DispatchProfileType = {\r\n    addPost: (value: string) => void\r\n    getUserProfile: (userId: number) => void\r\n    getUserStatus: (userId: number) => void\r\n    updateStatusProfile: (status: string) => void\r\n}\r\nexport type OwnProfilePropsType = MapStateProfileType & DispatchProfileType\r\ntype PropsType = RouteComponentProps<ParamsType> & OwnProfilePropsType\r\n\r\n\r\n","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from \"react\";\r\nimport s from \"./Button.module.scss\";\r\n\r\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\r\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>;\r\n\r\ntype SuperButtonPropsType = DefaultButtonPropsType & {\r\n    red?: boolean\r\n}\r\n\r\nconst Button: React.FC<SuperButtonPropsType> = React.memo((\r\n    {\r\n        red, className,\r\n        ...restProps// все остальные пропсы попадут в объект restProps, там же будет children\r\n    }\r\n) => {\r\n    // const finalClassName = s.default;\r\n    const finalClassName = `${className ? className : ''} ${s.default}`;\r\n    return (\r\n        <button\r\n            className={finalClassName}\r\n            {...restProps} // отдаём кнопке остальные пропсы если они есть (children там внутри)\r\n        />\r\n    );\r\n})\r\n\r\nexport default Button;\r\n","import React, { HTMLAttributes} from 'react'\r\nimport s from './MessageInform.module.scss'\r\n\r\n\r\n\r\nconst MessageInform: React.FC<HTMLAttributes<HTMLDivElement>> = React.memo(({\r\n                                      className,\r\n                                      ...restProps// все остальные пропсы попадут в объект restProps, там же будет children\r\n                                  }) => {\r\n    return <div className={s.box__message} {...restProps}/>\r\n})\r\n\r\nexport default MessageInform","import React, {ChangeEvent, useState} from 'react'\r\nimport {NavLink} from 'react-router-dom'\r\nimport s from './Users.module.scss'\r\nimport Button from \"../common/Button/Button\";\r\nimport MessageInform from \"../common/MessageInform/MessageInform\";\r\n\r\n// нам нужна классовая компонента, когда мы хотим взаимодействовать с обьектом. и для избежания side Effect-а. в данной ситуации, для запроса на сервер\r\n// функциональная компонента - это читсая функция, которая принимает пропсы и возвращает jsx, при этом она не может никак менять состояние стейта\r\n// или делать запрос на сервер,\r\n// а лиш через dispatcher отсылать action для изменения состояния.\r\n\r\nconst defaultAvatar =\r\n    'https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSq_I0JFO2DxoAV3J-sI7ajtx0qW0Q5neaY_A&usqp=CAU'\r\n\r\nconst Users = React.memo((props: propsType) => {\r\n    const [value, setValue] = useState<string>()\r\n    const pagesCount = Math.ceil(props.totalUsersCount / props.pageSize)\r\n    let pages: Array<number> = [];\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i)\r\n    }\r\n\r\n    let timeoutId: NodeJS.Timeout\r\n    const onSearchChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n        let currentValue = e.currentTarget.value\r\n        setValue(currentValue)\r\n        clearTimeout(timeoutId)\r\n        timeoutId = setTimeout(() => {\r\n            props.setFilter(currentValue)\r\n        }, 500)\r\n    }\r\n    return <div>\r\n        <div className={s.pagination}>\r\n            <div className={s.search__wrapper}>\r\n                <input placeholder={'Search here'} className={s.search__item} type=\"search\" value={value} onChange={onSearchChange}/>\r\n                {!props.users.length && <MessageInform>user not found</MessageInform>}\r\n            </div>\r\n            <div className={s.pagination_wrap__btn}>\r\n                {pages.map(p => <Button onClick={() => props.onPageChanged(p)}\r\n                                        className={props.currentPage === p ? s.selected : ''} key={p}>{p}</Button>)}\r\n            </div>\r\n        </div>\r\n        <div className={s.wrapper}>\r\n            {\r\n                props.users.map(u =>\r\n                    <div className={s.card__item} key={u.id}>\r\n\r\n                        <div>\r\n                            <img src={u.photos.small ?\r\n                                u.photos.small : defaultAvatar}\r\n                                 alt={u.photos.small ? u.photos.small : defaultAvatar}/>\r\n                        </div>\r\n                        <NavLink to={`/profile/${u.id}`}>\r\n                            <span className={s.view__profile}>view profile</span>\r\n                        </NavLink>\r\n                        <span className={s.name}>{u.name}</span>\r\n                        {u.followed ?\r\n                            <Button disabled={props.followingInProgress.some(id => id === u.id)} onClick={() => {\r\n                                props.unfollow(u.id)\r\n                            }}>DELETE FRIEND</Button> :\r\n                            <Button disabled={props.followingInProgress.some(id => id === u.id)} onClick={() => {\r\n                                props.follow(u.id)\r\n                            }}>ADD FRIEND</Button>\r\n                        }\r\n                    </div>)\r\n            }\r\n        </div>\r\n\r\n    </div>\r\n})\r\nexport default Users\r\n\r\n//types\r\ntype propsType = {\r\n    users: userType[]\r\n    pageSize: number\r\n    totalUsersCount: number\r\n    currentPage: number\r\n    onPageChanged: (value: number) => void\r\n    follow: (uId: number) => void\r\n    unfollow: (uId: number) => void\r\n    followingInProgress: Array<number>\r\n    setFilter: (value: string) => void\r\n    filter: string\r\n}\r\n","import {\r\n    FOLLOW,\r\n    UNFOLLOW,\r\n    SET_USERS,\r\n    SET_CURRENT_PAGE,\r\n    SET_TOTAL_USERS,\r\n    TOGGLE_IS_FETCHING,\r\n    TOGGLE_IS_FOLLOWING_PROGRESS\r\n} from \"../actions/actions\";\r\nimport {usersAPI} from \"../../api/api\";\r\nimport { ThunkAction} from \"redux-thunk\";\r\nimport {AppStateType} from \"../store\";\r\n\r\n// actions\r\nexport const followAC = (uId: number): followActionType => ({type: FOLLOW, uId})\r\nexport const unfollowAC = (uId: number): unFollowActionType => ({type: UNFOLLOW, uId})\r\nexport const setUsersAC = (users: userType[]): setUsersActionType => ({type: SET_USERS, users})\r\nexport const setCurrentPage = (currentPage: number): setPageActionType => ({type: SET_CURRENT_PAGE, currentPage})\r\nexport const setTotalUsersCount = (totalCount: number): setTotalUsersActionType => ({type: SET_TOTAL_USERS, totalCount})\r\nexport const toggleIsFetching = (isFetching: boolean): toggleIsFetchingType => ({type: TOGGLE_IS_FETCHING, isFetching})\r\nexport const toggleFollowingInProgress = (isFetching: boolean, userId: number): toggleFollowingInProgress =>\r\n    ({type: TOGGLE_IS_FOLLOWING_PROGRESS, isFetching, userId})\r\nexport const setFilter = (filter: string): setFilterType => ({type: 'SET_FILTER', filter})\r\n\r\n\r\n// thunks\r\nexport const usersRequest = (page: number,pageSize: number):ThunkType => {\r\n\r\n    return (dispatch) => {\r\n        dispatch(toggleIsFetching(true))\r\n        dispatch(setCurrentPage(page))\r\n\r\n        usersAPI.getUsers(page, pageSize).then(data => {\r\n            dispatch(toggleIsFetching(false))\r\n            dispatch(setUsersAC(data.items))\r\n            dispatch(setTotalUsersCount(data.totalCount))\r\n        });\r\n    }\r\n}\r\n\r\n\r\nexport const follow = (userId: number):ThunkType => {\r\n\r\n    return (dispatch) => {\r\n        dispatch(toggleFollowingInProgress(true, userId))\r\n        usersAPI.userFollow(userId)\r\n            .then(data => {\r\n                if (data.resultCode === 0) {\r\n                    dispatch(followAC(userId))\r\n                    dispatch(toggleFollowingInProgress(false, userId))\r\n                }\r\n            })\r\n    }\r\n}\r\nexport const unfollow = (userId: number):ThunkType => {\r\n\r\n    return (dispatch) => {\r\n        dispatch(toggleFollowingInProgress(true, userId))\r\n        usersAPI.userUnfollow(userId)\r\n            .then(data => {\r\n                if (data.resultCode === 0) {\r\n                    dispatch(unfollowAC(userId))\r\n                    dispatch(toggleFollowingInProgress(false, userId))\r\n                }\r\n            })\r\n    }\r\n}\r\n\r\n// types\r\nexport type ThunkType = ThunkAction<void, AppStateType, unknown, UsersActionTypes>\r\ntype followActionType = {\r\n    type: typeof FOLLOW\r\n    uId: number\r\n}\r\n\r\ntype unFollowActionType = {\r\n    type: typeof UNFOLLOW\r\n    uId: number\r\n}\r\n\r\ntype setPageActionType = {\r\n    type: typeof SET_CURRENT_PAGE\r\n    currentPage: number\r\n}\r\n\r\ntype setUsersActionType = {\r\n    type: typeof SET_USERS\r\n    users: userType[]\r\n}\r\ntype setTotalUsersActionType = {\r\n    type: typeof SET_TOTAL_USERS\r\n    totalCount: number\r\n}\r\ntype toggleIsFetchingType = {\r\n    type: typeof TOGGLE_IS_FETCHING\r\n    isFetching: boolean\r\n}\r\n\r\ntype toggleFollowingInProgress = {\r\n    type: typeof TOGGLE_IS_FOLLOWING_PROGRESS\r\n    isFetching: boolean\r\n    userId: number\r\n}\r\n\r\ntype setFilterType = {\r\n    type: 'SET_FILTER'\r\n    filter: string\r\n}\r\n\r\nexport type UsersActionTypes =\r\n    followActionType |\r\n    unFollowActionType |\r\n    setPageActionType |\r\n    setUsersActionType |\r\n    setTotalUsersActionType |\r\n    toggleIsFetchingType |\r\n    toggleFollowingInProgress |\r\n    setFilterType","import {AppStateType} from \"../store\";\r\n// import {createSelector} from \"reselect\";\r\n\r\nexport const getUsers = (state: AppStateType) => state.usersPage.users\r\n\r\n// library reselect\r\n// takes simple selectors (dependencies) and transfer into function parameters are what ordinary return selectors.\r\n// Selectors can compute derived data, allowing Redux to store the minimal possible state.\r\n// Selectors are efficient. A selector is not recomputed unless one of its arguments changes.\r\n// Selectors are composable. They can be used as input to other selectors.\r\n// export const getUsersSelector = createSelector(getUsers,(users) => {\r\n//     return users.filter(u => true)\r\n// })\r\n\r\nexport const getFilteredUsers = (state: AppStateType) => state.usersPage.users\r\n    .filter(u => u.name.toLowerCase().indexOf(state.usersPage.filter.toLowerCase()) > -1)\r\n\r\nexport const getPageSize = (state: AppStateType) => state.usersPage.pageSize\r\nexport const getTotalUsersCount = (state: AppStateType) => state.usersPage.totalUsersCount\r\nexport const getCurrentPage = (state: AppStateType) => state.usersPage.currentPage\r\nexport const getIsFetching = (state: AppStateType) => state.usersPage.isFetching\r\nexport const getFollowingInProgress= (state: AppStateType) => state.usersPage.followingInProgress","import React, {ChangeEvent} from 'react'\r\nimport {connect} from \"react-redux\";\r\nimport {compose} from 'redux';\r\nimport Users from \"./Users\";\r\nimport {\r\n    setCurrentPage,\r\n    setTotalUsersCount,\r\n    toggleFollowingInProgress,\r\n    usersRequest, follow, unfollow, setFilter\r\n} from \"../../redux/actionsCreator/usersAC\";\r\nimport {AppStateType} from '../../redux/store';\r\nimport Preloader from \"../common/Preloader/Preloader\";\r\nimport {\r\n    getCurrentPage, getFilteredUsers, getFollowingInProgress,\r\n    getIsFetching,\r\n    getPageSize,\r\n    getTotalUsersCount,\r\n} from \"../../redux/reducers/users-selector\";\r\nimport s from \"./Users.module.scss\";\r\nimport Button from \"../common/Button/Button\";\r\n\r\n\r\n// нам нужна классовая компонента, когда мы хотим взаимодействовать с обьектом. и для избежания side Effect-а. в данной\r\n// ситуации, для запроса на сервер\r\n// функциональная компонента - это чистая функция, которая принимает пропсы и возвращает jsx, при этом она не может\r\n// никак менять состояние стейта\r\n// или делать запросы на сервер,\r\n// а лиш через dispatcher отправлять action для изменения состояния.\r\n// type PropsType =  {\r\n//     currentValue: string\r\n//     timeoutId: NodeJS.Timeout\r\n//     pagesCount: number\r\n//     pages: Array<number>\r\n// }\r\n\r\nclass UsersContainer extends React.Component<usersType & CallbacksType> {\r\n    //componentDidMount() вызывается сразу после монтирования (то есть, вставки компонента в DOM)\r\n    // В этом методе должны происходить действия, которые требуют наличия DOM-узлов.\r\n    state = {\r\n        currentValue: '',\r\n        timeoutId: 0,\r\n        pagesCount: 0,\r\n        pages: []\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.usersRequest(this.props.currentPage, this.props.pageSize)\r\n        this.setState({\r\n            pagesCount: Math.ceil(this.props.totalUsersCount / this.props.pageSize)\r\n        })\r\n    }\r\n\r\n    componentDidUpdate(prevProps: Readonly<usersType & CallbacksType>, prevState: Readonly<{}>, snapshot?: any) {\r\n        if(prevProps !== this.props) {\r\n            let temp = []\r\n            for (let i = 1; i <= this.state.pagesCount; i++) {\r\n                temp.push(i)\r\n            }\r\n            if(temp.length) {\r\n                this.setState({\r\n                    pages: temp\r\n                })\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    onPageChanged = (pageNumber: number) => {\r\n        if (this.props.setCurrentPage) {\r\n            this.props.setCurrentPage(pageNumber)\r\n        }\r\n        this.props.usersRequest(pageNumber, this.props.pageSize)\r\n    }\r\n    userFollow = (userId: number) => {\r\n        this.props.follow(userId)\r\n    }\r\n    userUnfollow = (userId: number) => {\r\n        this.props.unfollow(userId)\r\n    }\r\n\r\n\r\n    onSearchChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n        this.setState({\r\n            currentValue: e.currentTarget.value\r\n        })\r\n        clearTimeout(this.state.timeoutId)\r\n        this.setState({\r\n            timeoutId: setTimeout(() => {\r\n                this.props.setFilter(this.state.currentValue)\r\n            }, 500)\r\n        })\r\n    }\r\n\r\n\r\n    render() {\r\n        console.log(this.state.pagesCount)\r\n        return (<>\r\n                {/*<div className={s.pagination}>*/}\r\n                {/*    <div>*/}\r\n                {/*        <input type=\"search\" value='find user' onChange={this.onSearchChange}/>*/}\r\n                {/*        {!this.props.users.length && <div>Users not found</div>}*/}\r\n                {/*    </div>*/}\r\n                {/*    <div className={s.pagination_wrap__btn}>*/}\r\n                {/*        {this.state.pages.map(p => <Button onClick={() => this.onPageChanged(p)}*/}\r\n                {/*                                className={this.props.currentPage === p ? s.selected : ''}*/}\r\n                {/*                                key={p}>{p}</Button>)}*/}\r\n                {/*    </div>*/}\r\n                {/*</div>*/}\r\n                {this.props.isFetching ? <Preloader/> :\r\n                    <Users\r\n                        users={this.props.users}\r\n                        totalUsersCount={this.props.totalUsersCount}\r\n                        pageSize={this.props.pageSize}\r\n                        currentPage={this.props.currentPage}\r\n                        follow={this.userFollow}\r\n                        unfollow={this.userUnfollow}\r\n                        onPageChanged={this.onPageChanged}\r\n                        followingInProgress={this.props.followingInProgress}\r\n                        setFilter={this.props.setFilter}\r\n                        filter={this.props.filter}\r\n                    />\r\n                }\r\n            </>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = (state: AppStateType): usersType => {\r\n    return {\r\n        filter: state.usersPage.filter,\r\n        users: getFilteredUsers(state),\r\n        pageSize: getPageSize(state),\r\n        totalUsersCount: getTotalUsersCount(state),\r\n        currentPage: getCurrentPage(state),\r\n        isFetching: getIsFetching(state),\r\n        followingInProgress: getFollowingInProgress(state)\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect<usersType, CallbacksType, {}, AppStateType>\r\n    (mapStateToProps, {\r\n        setCurrentPage,\r\n        setTotalUsersCount,\r\n        toggleFollowingInProgress,\r\n        usersRequest,\r\n        follow,\r\n        unfollow,\r\n        setFilter\r\n    })\r\n)(UsersContainer)\r\n\r\n// types\r\ntype CallbacksType = {\r\n    setCurrentPage?: (currentPage: number) => void\r\n    setTotalUsersCount?: (totalCount: number) => void\r\n    toggleFollowingInProgress: (isFetching: boolean, userId: number) => void\r\n    usersRequest: (currentPage: number, pageSize: number) => void\r\n    follow: (userId: number) => void\r\n    unfollow: (userId: number) => void\r\n    setFilter: (filter: string) => void\r\n}","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport style from './Header.module.scss'\r\nimport Button from \"../common/Button/Button\";\r\ntype PropsType = {\r\n    login: string | null\r\n    isAuth: boolean\r\n    logout: () => void\r\n}\r\n\r\nlet icon = \"https://image.flaticon.com/icons/png/512/147/147144.png\"\r\n\r\nexport const Header = ({login, isAuth, logout}: PropsType) => {\r\n    return (\r\n        <header className={style.header}>\r\n            <div>\r\n                <img className={style.logo} src=\"https://www.designlime.co.uk/wp-content/uploads/2020/07/social-network-icon-png.png\"\r\n                     alt=\"logo\"/>\r\n                Stello\r\n            </div>\r\n\r\n                <div className={style.loginContainer}>\r\n                    {isAuth ?\r\n                        <>\r\n                            <div className={style.avatar_container}>\r\n                                <img className={style.header__avatar}\r\n                                     src={icon}\r\n                                     alt='Avatar' />\r\n                                <span>{login}</span>\r\n                            </div>\r\n\r\n                            <Button onClick={logout}>Logout</Button>\r\n                        </> : <NavLink to='/login' className={style.login}>Login</NavLink>}\r\n\r\n                </div>\r\n        </header>\r\n    )\r\n}","import { SET_USER_DATA} from \"../actions/actions\";\r\nimport {authMe, FormDataType} from \"../../api/api\";\r\nimport {ThunkAction} from \"redux-thunk\";\r\nimport {AppStateType} from \"../store\";\r\nimport {stopSubmit} from \"redux-form\";\r\n\r\n// actions\r\nexport const setAuthUserDataAC = ({email,id,login,isAuth}:AuthStateType):authUserACType =>\r\n    ({ type: SET_USER_DATA, payload: {email, id,  login, isAuth} })\r\n\r\n// thunks\r\nexport const auth = ():ThunkType => {\r\n    return (dispatch) => {\r\n        return authMe.auth()\r\n            .then(data => {\r\n                if (data.resultCode === 0) {\r\n                    let { email, id, login } = data.data\r\n                    let isAuth = true\r\n                    dispatch(setAuthUserDataAC({email, id, login, isAuth}))\r\n                }\r\n            })\r\n    }\r\n}\r\n\r\nexport const login = (formData: FormDataType):ThunkType => {\r\n    return (dispatch) => {\r\n        authMe.login(formData)\r\n            .then(data => {\r\n                if (data.resultCode === 0) {\r\n                    dispatch(auth())\r\n                } else {\r\n                    let error = data.messages.length > 0 ? data.messages[0] : 'Email or password is wrong'\r\n                    let action:any = stopSubmit('login',{_error: error})\r\n                    dispatch(action);\r\n                }\r\n            })\r\n    }\r\n}\r\n\r\nexport const logout = ():ThunkType => {\r\n    return (dispatch) => {\r\n        authMe.logout()\r\n            .then(data => {\r\n                if (data.resultCode === 0) {\r\n                    let isAuth = false\r\n                    let email = null\r\n                    let id = null\r\n                    let login = null\r\n                    dispatch(setAuthUserDataAC({email,id,login, isAuth}))\r\n                }\r\n            })\r\n    }\r\n}\r\n\r\n// types\r\ntype ThunkType = ThunkAction<void, AppStateType, unknown, authUserACType>\r\nexport type AuthStateType = {\r\n    id: number | null\r\n    email: string | null\r\n    login: string | null\r\n    isAuth: boolean\r\n}\r\n\r\nexport type authUserACType = {\r\n    type: typeof SET_USER_DATA\r\n    payload: AuthStateType\r\n}","import React from \"react\";\r\nimport {Header} from \"./Header\";\r\nimport {connect} from \"react-redux\";\r\nimport { logout} from \"../../redux/actionsCreator/authAC\";\r\nimport {AppStateType} from \"../../redux/store\";\r\nimport {Redirect} from \"react-router-dom\";\r\n\r\nclass HeaderContainer extends React.Component<HeaderPropsType & CallbacksType> {\r\n    logout = () => {\r\n        this.props.logout()\r\n        return <Redirect to='/profile'/>\r\n    }\r\n    render() {\r\n        return (\r\n            <Header logout={this.logout} login={this.props.login} isAuth={this.props.isAuth}/>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state: AppStateType): HeaderPropsType => ({\r\n    isAuth: state.auth.isAuth,\r\n    login: state.auth.login\r\n})\r\n\r\n//types\r\ntype HeaderPropsType = {\r\n    isAuth: boolean\r\n    login: string | null\r\n}\r\ntype CallbacksType = {\r\n    logout: () => void\r\n}\r\n\r\nexport default connect<HeaderPropsType, CallbacksType, {}, AppStateType>(mapStateToProps, {logout})(HeaderContainer)","import React from 'react'\r\nimport {Field, InjectedFormProps, reduxForm} from 'redux-form'\r\nimport {connect} from \"react-redux\";\r\nimport {AppStateType} from \"../../redux/store\";\r\nimport {login} from \"../../redux/actionsCreator/authAC\";\r\nimport {Input} from \"../common/FormsControls/FormsControls\";\r\nimport {required} from \"../../utils/validators\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport style from './Login.module.scss'\r\nimport Button from \"../common/Button/Button\";\r\n\r\nconst LoginForm: React.FC<InjectedFormProps<FormDataType>>  = (props) => {\r\n    //e.preventDefault\r\n    // get all form data and put them to object\r\n    // props.onSubmit(formData)\r\n    return (<form onSubmit={props.handleSubmit}>\r\n                <div><span>{props.error}</span></div>\r\n                <div>\r\n                    <div>Email or username</div>\r\n                    <Field component={Input}\r\n                            name={'email'}\r\n                            type=\"text\"\r\n                            placeholder={'Login'}\r\n                            validate={[required]}\r\n                /></div>\r\n                <div>\r\n                    <Field component={Input}\r\n                            name={'password'}\r\n                            type=\"password\"\r\n                            placeholder={'Password'}\r\n                            validate={[required]}\r\n                /></div>\r\n                <div>\r\n                    <Field component='input'\r\n                            name={'rememberMe'}\r\n                            type=\"checkbox\"/>\r\n                            <span>Remember Me</span>\r\n                </div>\r\n                <div>\r\n                    <Button style={{'width': '100%'}}>Login</Button>\r\n                </div>\r\n            </form>\r\n    )\r\n}\r\n\r\n//HOC reduxForm - это контейнерная компонента\r\nconst LoginReduxForm = reduxForm<FormDataType>({\r\n    // a unique name for the form\r\n    form: 'login'\r\n})(LoginForm)\r\n\r\n\r\nconst Login = (props: MapDispatchToProps & MapStateToProps) => {\r\n\r\n    const onSubmit = (formData: FormDataType) => {\r\n        props.login(formData)\r\n    }\r\n\r\n    if(props.isAuth) {\r\n        return <Redirect to={'/profile'}/>\r\n    }\r\n\r\n    return (\r\n        <div className={style.loginContainer}>\r\n            <h1>Log in</h1>\r\n            <LoginReduxForm onSubmit={onSubmit}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state: AppStateType): MapStateToProps => ({\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\n// types\r\ntype FormDataType = {\r\n    login: string\r\n    password: string\r\n    rememberMe: boolean\r\n}\r\ntype MapStateToProps = {\r\n    isAuth: boolean\r\n}\r\ntype MapDispatchToProps = {\r\n    login: (formData: FormDataType) => void\r\n}\r\n\r\nexport default connect<MapStateToProps, MapDispatchToProps, {}, AppStateType>(\r\n    mapStateToProps, {login}\r\n)(Login)\r\n","import React from 'react';\r\nimport {Navbar} from \"./components/Navbar/Navbar\";\r\nimport {BrowserRouter, Redirect, Route} from \"react-router-dom\";\r\nimport DialogsContainer  from './components/Dialogs/DialogsContainer';\r\nimport ProfileContainer from \"./components/Profile/ProfileContainer\";\r\nimport UsersContainer from \"./components/Users/UsersContainer\";\r\nimport HeaderContainer from \"./components/Header/HeaderContainer\";\r\nimport Login from \"./components/Login/Login\";\r\nimport {connect} from \"react-redux\";\r\nimport {AppStateType} from \"./redux/store\";\r\nimport Preloader from \"./components/common/Preloader/Preloader\";\r\nimport {initializeApp} from \"./redux/actionsCreator/appAC\";\r\n\r\nclass App extends React.Component<PropsType> {\r\n    componentDidMount() {\r\n        this.props.initializeApp() //\r\n    }\r\n\r\n    render() {\r\n        if (!this.props.initialized) {\r\n            return <Preloader/>\r\n        }\r\n        return (\r\n            <BrowserRouter>\r\n                <div className=\"app-wrapper\">\r\n                    <HeaderContainer/>\r\n                    <div className=\"wrapper\">\r\n                        <Navbar/>\r\n                        <main className=\"content\">\r\n                            <Route path=\"/dialogs\" render={() => <DialogsContainer/>}/>\r\n                            <Route exact path={[\"/\", \"/social-network\"]} render={() => <Redirect to={\"/profile\"}/>}/>\r\n                            <Route exact path=\"/profile/:userId?\" render={() => <ProfileContainer/>}/>\r\n                            <Route path=\"/users\" render={() => <UsersContainer/>}/>\r\n                            <Route path=\"/login\" render={() => <Login/>}/>\r\n                        </main>\r\n                    </div>\r\n                </div>\r\n            </BrowserRouter>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state: AppStateType) => {\r\n    return {initialized: state.app.initialized}\r\n}\r\n\r\nexport default connect(mapStateToProps,{initializeApp})(App);\r\n\r\ntype PropsType = {\r\n    initializeApp: () => void\r\n    initialized: boolean\r\n}\r\n","import {INITIALIZED} from \"../actions/actions\";\r\nimport {auth} from \"./authAC\";\r\nimport {ThunkAction} from \"redux-thunk\";\r\nimport {AppStateType} from \"../store\";\r\n\r\n// actions\r\nexport const initializedSuccess = () =>\r\n    ({type: INITIALIZED}) as const\r\n\r\nexport const fake = () =>\r\n    ({type: 'FAKE'}) as const\r\n\r\nexport const initializeApp = (): ThunkType => (dispatch) => {\r\n    let res = dispatch(auth())\r\n    Promise.all([res]).then(() => {\r\n        dispatch(initializedSuccess())\r\n    })\r\n}\r\n\r\ntype ThunkType = ThunkAction<void, AppStateType, unknown, ActionsType>\r\nexport type ActionsType =\r\n    ReturnType<typeof initializedSuccess> |\r\n    ReturnType<typeof fake>\r\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { ADD_POST, SET_STATUS, SET_USER_PROFILE} from \"../actions/actions\";\r\nimport {ProfileACTypes} from \"../actionsCreator/profileAC\";\r\n\r\nlet initialState: profilePageType = {\r\n    posts: [\r\n        { id: 1, message: 'Lorem ipsum dolor sit amet, consectetur adipisicing elit. Amet aspernatur at commodi consequuntur corporis dolore ex nemo nisi quod suscipit!', likesCount: 11 },\r\n        { id: 2, message: 'Lorem ipsum dolor sit amet, consectetur adipisicing elit. Amet aspernatur at commodi consequuntur corporis dolore ex nemo nisi quod suscipit!', likesCount: 2 },\r\n        { id: 3, message: 'I\\'m Vova', likesCount: 111 },\r\n        { id: 4, message: 'Goodbye', likesCount: 1 },\r\n    ],\r\n    profile: null,\r\n    status: 'No status'\r\n};\r\n\r\n// Reducer - это чистая функция, которая принимает стейт, актион\r\n// если нужно модифицирует(добавляет какие-то данные) его по правилам имутабельности (работает с копией стейта и возвращает)\r\n// измененную копию из этой функции. Или возвращает нетронутый стейт, если ничего не изменилось.\r\nconst profileReducer = (state: profilePageType = initialState, action: ProfileACTypes): profilePageType => {\r\n    switch (action.type) {\r\n        case ADD_POST:\r\n            let messageBody = action.value;\r\n            return {\r\n                ...state,\r\n                posts: [...state.posts, { id: 4, message: messageBody, likesCount: 0 }]\r\n            }\r\n        case SET_USER_PROFILE:\r\n            return { ...state, profile: {...action.profile}}\r\n        case SET_STATUS:\r\n            return { ...state, status: action.status}\r\n        default:\r\n            return state\r\n    }\r\n}\r\nexport default profileReducer;\r\n\r\n\r\n","import { ADD_MESSAGE} from \"../actions/actions\";\r\n\r\nconst initialState: dialogsPageType = {\r\n    dialogs: [\r\n        {\r\n            id: '1',\r\n            avatar: 'https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSV83gjFPxbUtDH5iJuUHJHG45z--_hYg6GUA&usqp=CAU',\r\n            name: 'Sveta',\r\n            status: {\r\n                title: 'Online',\r\n                isOnline: false\r\n            }\r\n        },\r\n        {\r\n            id: '2',\r\n            avatar: 'https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcT5g67tZkLuNcbMvMPfjAO08mstu5QTUr_y5g&usqp=CAU',\r\n            name: 'Angelina',\r\n            status: {\r\n                title: 'Angelina left 7 minute ago',\r\n                isOnline: false\r\n            }\r\n        },\r\n        {\r\n            id: '3',\r\n            avatar: 'https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcS3AVHYXRxxtX6-fzIMlSWLwqMDKCMVudzdiA&usqp=CAU',\r\n            name: 'Artem',\r\n            status: {\r\n                title: 'Angelina left 1 day ago',\r\n                isOnline: false\r\n            }\r\n        },\r\n        {\r\n            id: '4',\r\n            avatar: 'https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcR0OpLU7rYWiPzdGX7LHNfSyDSNQRD8FMoNVA&usqp=CAU',\r\n            name: 'Vova',\r\n            status: {\r\n                title: 'Online',\r\n                isOnline: true\r\n            }\r\n        },\r\n        {\r\n            id: '5',\r\n            avatar: 'https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcR0OpLU7rYWiPzdGX7LHNfSyDSNQRD8FMoNVA&usqp=CAU',\r\n            name: 'Naytin',\r\n            status: {\r\n                title: 'Online',\r\n                isOnline: true\r\n            }\r\n        },\r\n        {\r\n            id: '6',\r\n            avatar: 'https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcT5g67tZkLuNcbMvMPfjAO08mstu5QTUr_y5g&usqp=CAU',\r\n            name: 'Svet_v',\r\n            status: {\r\n                title: 'Online',\r\n                isOnline: true\r\n            }\r\n        },\r\n        {\r\n            id: '7',\r\n            avatar: 'https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcT5g67tZkLuNcbMvMPfjAO08mstu5QTUr_y5g&usqp=CAU',\r\n            name: '@Lera',\r\n            status: {\r\n                title: 'Online',\r\n                isOnline: true\r\n            }\r\n        },\r\n        {\r\n            id: '8',\r\n            avatar: 'https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcR0OpLU7rYWiPzdGX7LHNfSyDSNQRD8FMoNVA&usqp=CAU',\r\n            name: 'Valera',\r\n            status: {\r\n                title: 'Online',\r\n                isOnline: true\r\n            }\r\n        },\r\n    ],\r\n    messages: [\r\n        { id: 1, message: 'Hello, how are you?', name: 'Sveta' },\r\n        { id: 2, message: 'I,m a good student', name: 'my' },\r\n        { id: 3, message: 'you, how are you', name: 'Alina' },\r\n        { id: 4, message: 'goodbye my friend', name: 'my' },\r\n        { id: 5, message: 'goodbye my friend', name: 'Artem' },\r\n        { id: 6, message: 'goodbye my friend', name: 'my' },\r\n        { id: 7, message: 'goodbye my friend', name: 'Artem' },\r\n        { id: 8, message: 'goodbye my friend', name: 'Artem' },\r\n        { id: 9, message: 'goodbye my friend', name: 'Artem' },\r\n        { id: 10, message: 'goodbye my friend', name: 'Artem' },\r\n    ]\r\n}\r\n\r\n// // Reducer - это чистая функция, которая принимает старый стейт, актион\r\n// // если нужно модифицирует(добавляет какие-то данные) его по правилам имутабельности (работает с копией стейта и возвращает)\r\n// // измененную копию из этой функции. Или возвращает нетронутый стейт, если ничего не изменилось.\r\nconst dialogsReducer = (state: dialogsPageType = initialState, action: actionType): dialogsPageType => {\r\n    switch (action.type) {\r\n        case ADD_MESSAGE:\r\n            let messageText = action.value;\r\n            return {\r\n                ...state,\r\n                messages: [...state.messages, { id: 11, message: messageText ? messageText : '', name: 'my' }]\r\n            }\r\n        default:\r\n            return state // если ничего не изменилось, по дефолту возвращаем неизмененный стейт\r\n\r\n    }\r\n}\r\nexport default dialogsReducer;\r\n\r\n\r\n","import {\r\n    FOLLOW,\r\n    UNFOLLOW,\r\n    SET_USERS,\r\n    SET_CURRENT_PAGE,\r\n    SET_TOTAL_USERS,\r\n    TOGGLE_IS_FETCHING,\r\n    TOGGLE_IS_FOLLOWING_PROGRESS\r\n} from \"../actions/actions\";\r\nimport {UsersActionTypes} from \"../actionsCreator/usersAC\";\r\n\r\nconst initialState = {\r\n    filter: '',\r\n    users: [\r\n        // {id: 1, avatar: 'https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSq_I0JFO2DxoAV3J-sI7ajtx0qW0Q5neaY_A&usqp=CAU', followed: false, fullName: 'Vova', status: 'Status', location: {city: 'Chernihiv', country: 'Ukraine'} },\r\n        // {id: 2, avatar: 'https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSq_I0JFO2DxoAV3J-sI7ajtx0qW0Q5neaY_A&usqp=CAU', followed: true, fullName: 'Sveta', status: 'Status', location: {city: 'Chernihiv', country: 'Ukraine'} },\r\n        // {id: 3, avatar: 'https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSq_I0JFO2DxoAV3J-sI7ajtx0qW0Q5neaY_A&usqp=CAU', followed: false, fullName: 'John', status: 'Status', location: {city: 'Chicago', country: 'US'} }\r\n    ],\r\n    pageSize: 10,\r\n    totalUsersCount: 0,\r\n    currentPage: 1,\r\n    isFetching: false,\r\n    followingInProgress: []\r\n}\r\n\r\n\r\n// // Reducer - это чистая функция, которая принимает старый стейт, актион\r\n// // если нужно модифицирует(добавляет какие-то данные) его по правилам имутабельности (работает с копией стейта и возвращает)\r\n// // измененную копию из этой функции. Или возвращает нетронутый стейт, если ничего не изменилось.\r\nconst usersReducer = (state: usersType = initialState, action: UsersActionTypes): usersType => {\r\n    switch (action.type) {\r\n        case FOLLOW:\r\n            return {\r\n                ...state,\r\n                users: state.users.map(u => u.id === action.uId ? {...u, followed: true} : u)\r\n            }\r\n        // если в case нету ретурна, то необходимо делать брейк, чтобы case не проваливался дальше.\r\n        case UNFOLLOW:\r\n            return {\r\n                ...state,\r\n                users: state.users.map(u => u.id === action.uId ? {...u, followed: false} : u)\r\n            }\r\n        case SET_USERS:\r\n            return {...state, users: [...action.users]}\r\n        case SET_CURRENT_PAGE:\r\n            return {\r\n                ...state,\r\n                currentPage: action.currentPage\r\n            }\r\n\r\n        case SET_TOTAL_USERS:\r\n            return {\r\n                ...state,\r\n                totalUsersCount: action.totalCount > 100 ? 100 : action.totalCount\r\n            }\r\n        case TOGGLE_IS_FETCHING:\r\n            return {\r\n                ...state,\r\n                isFetching: action.isFetching\r\n            }\r\n        case TOGGLE_IS_FOLLOWING_PROGRESS:\r\n            return {\r\n                ...state,\r\n                followingInProgress: action.isFetching\r\n                    ? [...state.followingInProgress, action.userId]\r\n                    : [...state.followingInProgress.filter(id => id !== action.userId)]\r\n            }\r\n        case 'SET_FILTER':\r\n            return {\r\n                ...state,\r\n                filter: action.filter\r\n            }\r\n        default:\r\n            return state // если ничего не изменилось, по дефолту возвращаем неизмененный стейт\r\n\r\n    }\r\n}\r\nexport default usersReducer;\r\n\r\n\r\n\r\n\r\n","import {SET_USER_DATA} from \"../actions/actions\";\r\nimport {AuthStateType, authUserACType} from \"../actionsCreator/authAC\";\r\n\r\nlet initialState = {\r\n    id: null,\r\n    email: null,\r\n    login: null,\r\n    isAuth: false\r\n}\r\n\r\n// Reducer - это чистая функция, которая принимает старый стейт, актион\r\n// если нужно модифицирует(добавляет какие-то данные) его по правилам имутабельности (работает с копией стейта и возвращает)\r\n// измененную копию из этой функции. Или возвращает нетронутый стейт, если ничего не изменилось.\r\nconst authReducer = (state: AuthStateType = initialState, action: authUserACType):AuthStateType => {\r\n    switch (action.type) {\r\n        case SET_USER_DATA:\r\n            return { ...state, ...action.payload}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default authReducer;","import {INITIALIZED} from \"../actions/actions\";\r\nimport {ActionsType} from '../actionsCreator/appAC'\r\n\r\nlet initialState = {\r\n    initialized: false,\r\n    fake: 10\r\n}\r\n\r\n\r\n\r\n// Reducer - это чистая функция, которая принимает старый стейт, актион\r\n// если нужно модифицирует(добавляет какие-то данные) его по правилам имутабельности (работает с копией стейта и возвращает)\r\n// измененную копию из этой функции. Или возвращает нетронутый стейт, если ничего не изменилось.\r\nconst appReducer = (state: InitialStateType = initialState, action: ActionsType) => {\r\n    switch (action.type) {\r\n        case INITIALIZED:\r\n            return {...state, initialized: true}\r\n        case 'FAKE':\r\n            return {...state, fake: state.fake + 1}\r\n        default:\r\n            return state\r\n\r\n    }\r\n}\r\n\r\ntype InitialStateType = {\r\n    initialized: boolean\r\n    fake: number\r\n}\r\n\r\nexport default appReducer;\r\n\r\n","import {createStore, combineReducers,applyMiddleware} from \"redux\";\r\nimport profileReducer from \"./reducers/profileReducer\";\r\nimport dialogsReducer from \"./reducers/dialogsReducer\";\r\nimport usersReducer from \"./reducers/usersReducer\";\r\nimport authReducer from \"./reducers/authReducer\";\r\nimport { reducer as formReducer } from 'redux-form'\r\nimport thunkMiddleware from 'redux-thunk'\r\nimport appReducer from \"./reducers/appReducer\";\r\n\r\nlet reducers = combineReducers({\r\n    profilePage: profileReducer,\r\n    dialogsPage: dialogsReducer,\r\n    usersPage: usersReducer,\r\n    auth: authReducer,\r\n    form: formReducer, // зосдаем ветку form и передаем formReducer из 'redux-form'\r\n    app: appReducer\r\n})\r\n\r\ntype RootReducerType = typeof reducers // (globalstate: AppStateType) => AppStateType\r\n\r\nexport type AppStateType = ReturnType<RootReducerType> // get type for all state with helps ReturnType from RootReducerType\r\n\r\n//for redux-devtool\r\n// @ts-ignore\r\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose\r\nconst store = createStore(reducers,composeEnhancers(applyMiddleware(thunkMiddleware)))\r\n\r\n// @ts-ignore\r\nwindow.__store__ = store\r\nexport default store","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.scss';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { Provider } from 'react-redux';\r\nimport store from './redux/store';\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <Provider store={store}>\r\n            <App />\r\n        </Provider>\r\n    </React.StrictMode>,\r\n    document.getElementById('root')\r\n);\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialog\":\"Dialog_dialog__2K2Wj\",\"avatar__wrapper\":\"Dialog_avatar__wrapper__LlKbk\",\"online\":\"Dialog_online__1vF4A\",\"offline\":\"Dialog_offline__3Lbjh\",\"status__block\":\"Dialog_status__block__3jN2j\",\"status\":\"Dialog_status__1SOyD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormsControls_formControl__3I3br\",\"error\":\"FormsControls_error__k7wEJ\",\"errorMessage\":\"FormsControls_errorMessage__zv9jX\",\"formSummaryError\":\"FormsControls_formSummaryError__LJwKW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__77AOv\",\"loginContainer\":\"Header_loginContainer__2-JaW\",\"login\":\"Header_login__VEQmZ\",\"avatar_container\":\"Header_avatar_container__24YeV\",\"header__avatar\":\"Header_header__avatar__NJs12\",\"logo\":\"Header_logo__1zMXW\"};","export const required = (value: string): string | undefined => {\r\n    if(value) return undefined\r\n    return 'Field is required'\r\n}\r\nexport const maxLengthCreator = (maxLength: number) => (value: string): string | undefined => {\r\n        if(value && value.length > maxLength) return `Max length is ${maxLength} symbols`\r\n        return undefined\r\n}\r\n\r\n","import React from 'react'\r\nimport style from './FormsControls.module.scss'\r\n\r\nexport const Input = ({input, meta, ...props}: any) => {\r\n    const hasError = meta.touched && meta.error\r\n    return <>\r\n        <input className={`${style.formControl} ${hasError ? style.error : ''}`} {...input} {...props}/>\r\n        {hasError && <span className={style.errorMessage}>{meta.error}</span>}\r\n    </>\r\n}\r\n\r\nexport const TextArea = ({input, meta, ...props}: any) => {\r\n    const hasError = meta.touched && meta.error\r\n    return <>\r\n            <textarea className={`${style.formControl} ${hasError ? style.error : ''}`} {...input} {...props}/>\r\n            {hasError && <span className={style.errorMessage}>{meta.error}</span>}\r\n        </>\r\n}\r\n\r\n\r\n","import {ADD_POST, SET_STATUS, SET_USER_PROFILE} from \"../actions/actions\";\r\nimport {ThunkAction} from \"redux-thunk\";\r\nimport {AppStateType} from \"../store\";\r\nimport {profileAPI} from \"../../api/api\";\r\n\r\n// actions\r\nexport const addPost = (value: string) => ({type: ADD_POST, value}) as const\r\nexport const setUserProfile = (profile: profileUserType) => ({type: SET_USER_PROFILE, profile}) as const\r\nexport const setStatus = (status: string) => ({type: SET_STATUS, status}) as const\r\n\r\n// thunks\r\nexport const getUserProfile = (userId: number): ThunkType =>\r\n    (dispatch) => {\r\n        profileAPI.getProfile(userId)\r\n            .then(data => dispatch(setUserProfile(data)))\r\n    }\r\n\r\nexport const getUserStatus = (userId: number): ThunkType =>\r\n    (dispatch) => {\r\n        profileAPI.getStatus(userId)\r\n            .then(data => dispatch(setStatus(data)))\r\n    }\r\n\r\nexport const updateStatusProfile = (status: string): ThunkType =>\r\n    (dispatch) => {\r\n        profileAPI.updateStatus(status)\r\n            .then(data => {\r\n                if (data.resultCode === 0) dispatch(setStatus(status))\r\n            })\r\n    }\r\n\r\n\r\n// types\r\nexport type ThunkType = ThunkAction<void, AppStateType, unknown, ProfileACTypes>\r\nexport type ProfileACTypes =\r\n    ReturnType<typeof addPost> |\r\n    ReturnType<typeof setUserProfile> |\r\n    ReturnType<typeof setStatus>\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"messagesSubscriber\":\"Messages_messagesSubscriber__2Dd67\",\"messagesMy\":\"Messages_messagesMy__2C2Br\",\"message\":\"Messages_message__2uG39\"};","export const ADD_MESSAGE = 'DIALOG/ADD_MESSAGE';\r\n\r\nexport const ADD_POST = 'PROFILE/ADD_POST';\r\nexport const SET_STATUS = 'SET_STATUS';\r\n\r\nexport const SET_USER_PROFILE = 'USER/SET_USER_PROFILE';\r\nexport const FOLLOW = 'USERS/FOLLOW'\r\nexport const UNFOLLOW = 'USERS/UNFOLLOW'\r\nexport const SET_USERS = 'USERS/SET_USERS'\r\nexport const SET_CURRENT_PAGE = 'USERS/SET_CURRENT_PAGE'\r\nexport const SET_TOTAL_USERS = 'USERS/SET_TOTAL_USERS'\r\nexport const TOGGLE_IS_FETCHING = 'USERS/TOGGLE_IS_FETCHING'\r\nexport const TOGGLE_IS_FOLLOWING_PROGRESS = 'USERS/TOGGLE_IS_FOLLOWING_PROGRESS'\r\nexport const SET_USER_DATA = 'USERS/SET_USER_DATA';\r\n\r\nexport const INITIALIZED= 'AUTH/INITIALIZED';\r\n"],"sourceRoot":""}